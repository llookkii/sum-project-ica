steps:
  # Step 1: Set up the Kubernetes credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'devops-cluster'  # Ensure this is the correct cluster name
      - '--region=us-central1'  # Ensure this is the correct region for the cluster

  # Step 2: Apply Kubernetes secrets
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
        - 'CLOUDSDK_COMPUTE_REGION=us-central1'  # Ensure region is correct
        - 'CLOUDSDK_COMPUTE_ZONE=us-central1'  # Ensure zone is correct
        - 'CLOUDSDK_CONTAINER_CLUSTER=devops-cluster'  # Ensure cluster name is correct
    args:
        - 'apply'
        - '-f'
        - 'kubernetes/secrets.yaml'

  # Step 3: Build and push backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/evident-flame-400500/sum-backend:latest', './backend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/evident-flame-400500/sum-backend:latest']

  # Step 4: Build and push frontend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/evident-flame-400500/sum-frontend:latest', './frontend']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/evident-flame-400500/sum-frontend:latest']

  # Step 5: Apply all Kubernetes manifests
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
        - 'apply'
        - '-f'
        - 'kubernetes/'

  # Step 6: Cluster info check to verify the setup
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
        - 'CLOUDSDK_COMPUTE_REGION=us-central1'  # Ensure region is correct
        - 'CLOUDSDK_COMPUTE_ZONE=us-central1'  # Ensure zone is correct
        - 'CLOUDSDK_CONTAINER_CLUSTER=devops-cluster'  # Ensure cluster name is correct
    args:
        - 'cluster-info'

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - 'gcr.io/evident-flame-400500/sum-backend:latest'
  - 'gcr.io/evident-flame-400500/sum-frontend:latest'

